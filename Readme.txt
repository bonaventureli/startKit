<<<<<<< HEAD

version:0.3
date:2018/9/10
目的：
熟练芯片的所有功能
时间：
2018/9/10

预计花费时间：
8小时*60天=480小时

需求：
CAN可以收发数据
LIN可以收发数据
UART可以收发数据
定时器可以自由使用
硬件抽象层（可移植部分）
存底层（不可移植部分）

每一个底层实现有多少接口
每个硬件抽象层有多少接口
每个函数的可优化的部分
每个算法的罗列
每个人类的需求用计算机如何实现。

问题：
关于驱动跟新的问题，如何管理单独本项目中单独模块驱动的跟新和整个系统和应用层的跟新
软件跟新问题。
跟新过的驱动需要测试有效，工程系统需要创建版本号，单独驱动也需要创建版本号，所有软件跟新都通过git来管理。
为什么要这样管理？
每个系统的应用层调用的驱动接口可能都不同，驱动不断跟新，对应用层调用的是相应的，当时的驱动接口，所有通过git管理版本很关键，
另一个优点是文件的名称不需要改变，只需要改变文件内容即可。




=======
version:0.1
>>>>>>> 3b655209f79f94c3afebd3d0dedc692e493d90f9
CAN0测试收发数据正常
UART测试收发数据正常
version :0.2
增加CanPinConfigC接口，没有测试
函数管理和版本管理
在开发过程中，可能有些函数有不同的实现，目前是使用增加一个函数来实现，这样累加起来，版本越多，文件中可能包含的相同功能的函数就越多，只是实现方法不一样，
为了防止出现代码的冗余性，使用版本管理，新版本中函数的实现不同，但函数个数和接口不变。
version :0.3
rscan.c
文件末尾增加总行说明，以后跟新版本代码的时候说明更改目的和地方
在阅读代码的时候也可以说明修改了那些文件。
增加两个文件
ingeek_ble_server.c
ingeek_ble_server.h
在git的平台上不断跟新这两个文件
如果工程中只是跟新了一两个文件，如何在一个版中同时查看不同版本的文件？
是否是通过增加tag
git push origin --tags
